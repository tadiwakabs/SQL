--Show a list of customers who are not in the USA.
SELECT FirstName, LastName, Country FROM customers
WHERE country != "USA";

--Find the Invoices of customers who are from Brazil.
SELECT invoiceid, firstname, lastname, invoicedate FROM customers
LEFT JOIN invoices
ON invoices.CustomerId=customers.CustomerId
WHERE country = "Brazil";

--Show the Employees who are Sales Agents.
SELECT firstname, Lastname, title FROM employees 
WHERE Title LIKE "%Sales%" AND Title LIKE "%Agent%";

--Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT BillingCountry FROM invoices;

--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT employees.FirstName, employees.lastname, invoiceid FROM invoices
LEFT JOIN customers 
ON customers.CustomerId=invoices.CustomerId
LEFT JOIN employees
ON employees.employeeid=Customers.SupportRepId
WHERE Title LIKE "%Sales%" AND Title LIKE "%Agent%"
ORDER BY employees.FirstName;

--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT Employees.Firstname AS "Sales Agent FN", Employees.Lastname AS "Sales Agent LN", customers.FirstName, customers.LastName, Country, Total FROM invoices
LEFT JOIN customers
ON customers.CustomerId=invoices.CustomerId
LEFT JOIN employees
ON employees.employeeid=Customers.SupportRepId
WHERE Title LIKE "%Sales%" AND Title LIKE "%Agent%"
ORDER BY customers.FirstName;

--How many Invoices were there in 2009?
SELECT COUNT(InvoiceID) AS "# of Invoices" FROM invoices
WHERE invoicedate LIKE "%2009%";

--What are the total sales for 2009?
SELECT round(SUM(Total)) FROM invoices
WHERE C;

--Write a query that includes the purchased track name with each invoice line ID.
SELECT name, invoiceid FROM tracks
LEFT JOIN invoice_items
ON invoice_items.trackid=tracks.TrackId
WHERE invoiceid != "NULL";

--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT artists.name AS "Artist Name", tracks.name AS "Track Name", invoiceid FROM tracks
LEFT JOIN invoice_items
ON invoice_items.trackid=tracks.TrackId
LEFT JOIN albums
ON albums.AlbumId=tracks.AlbumId
LEFT JOIN artists
ON artists.ArtistId=albums.ArtistId
WHERE invoiceid != "NULL";

--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT tracks.Name, Albums.Title, media_types.Name, genres.Name FROM tracks
LEFT JOIN Albums
ON Albums.AlbumId=Tracks.AlbumId
LEFT JOIN Media_Types
ON Media_Types.MediaTypeId=Tracks.MediaTypeId
LEFT JOIN Genres
ON Genres.GenreId=Tracks.GenreId
ORDER BY albums.Title;

--Show the total sales made by each sales agent.
SELECT Employees.Firstname, Employees.Lastname, SUM(Total) AS "Total Sales" FROM invoices
LEFT JOIN customers
ON customers.CustomerId=invoices.CustomerId
LEFT JOIN employees
ON employees.employeeid=Customers.SupportRepId
GROUP BY Employees.Firstname;

--Which sales agent made the most dollars in sales in 2009?
SELECT Employees.Firstname, Employees.Lastname, round(SUM(Total)) AS "Total Sales" FROM invoices
LEFT JOIN customers
ON customers.CustomerId=invoices.CustomerId
LEFT JOIN employees
ON employees.employeeid=Customers.SupportRepId
WHERE invoicedate LIKE "%2009%"
GROUP BY Employees.Firstname
ORDER BY round(SUM(Total)) DESC
LIMIT 1;
