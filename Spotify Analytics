-- For this project, I downloaded Spotify data from Kaggle.
-- Then I created a table to insert Spotify data into.
-- Finally, I performed analytics on the data using SQL. 

-- Creating the table:
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

-- Then I inserted the Spotify Data .csv into the table.

--Group the artists with their tracks in alphabetical order and display the popularity, danceability and energy of each track.
SELECT artist_name, track_name, popularity, danceability, energy
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

--Which 10 tracks are the most popular?
SELECT track_name, artist_name, popularity FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

--Which 10 tracks have the least danceable songs?
SELECT track_name, artist_name, danceability FROM BIT_DB.Spotifydata
ORDER BY danceability ASC
LIMIT 10;

--Which artists released songs longer than 4 minutes?
SELECT artist_name, track_name, duration_ms FROM BIT_DB.Spotifydata
WHERE duration_ms>240000
ORDER BY duration_ms ASC;
